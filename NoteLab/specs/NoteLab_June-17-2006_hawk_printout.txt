Title:  NoteLab
Date:  June 17, 2006
Author:  Dominic Kramer
Description:  This is a snapshot of NoteLab before I change the architecture 
              to include a CompositeCanvas which consists of a 
              PrintCanvas and SelectionCanvas and DeletionCanvas.


================================================================================
  Table of Contents
================================================================================

       Section 1:  Package List
       Section 2:  UML Diagrams Listed Alphabetically
       Section 3:  Shortened Source Code Listed Alphabetically

================================================================================
Section 1:  Package List
================================================================================

       noteLab.gui
       noteLab.gui.geom
       noteLab.gui.prefs
       noteLab.gui.toolbar
       noteLab.materials.stroke
       noteLab.materials
       noteLab.materials.tools
       noteLab.util
       noteLab.util.geom
       noteLab.util.geom.unit
       noteLab.util.save
       noteLab.util.state
       noteLab.util.state.value

================================================================================
Section 2:  UML Diagrams Organized Alphabetically
================================================================================

        ----------------------------------------------------------------------------------- 
       | noteLab.materials.Binder                                                          |
       |-----------------------------------------------------------------------------------|
       | -pageList:LinkedList                                                              |
       | -curPage:int                                                                      |
       | -curStroke:noteLab.materials.stroke.Stroke                                        |
       | -numColumns:int                                                                   |
       |-----------------------------------------------------------------------------------|
       | +noteLab.materials.Binder([LnoteLab.materials.Page;)                              |
       |-----------------------------------------------------------------------------------|
       | +main([Ljava.lang.String;):void                                                   |
       | +next():void                                                                      |
       | +print(Graphics, PageFormat, int):int                                             |
       | +previous():void                                                                  |
       | +getLength(noteLab.util.geom.unit.Unit):noteLab.util.geom.unit.MValue             |
       | +getWidth(noteLab.util.geom.unit.Unit):noteLab.util.geom.unit.MValue              |
       | +renderInto(Graphics2D, noteLab.util.geom.MAffineTransform):void                  |
       | +setNumColumns(int):void                                                          |
       | +addNewPage():void                                                                |
       | +copyPage():void                                                                  |
       | +getCurrentPage():noteLab.materials.Page                                          |
       | +isStrokeStarted():boolean                                                        |
       | +addPointToStroke(noteLab.util.geom.MPoint):void                                  |
       | +setCurrentPage(noteLab.util.geom.MPoint):void                                    |
       | +startStroke(noteLab.materials.tools.Tool, noteLab.util.geom.MPoint):void         |
       | +finishStroke():void                                                              |
       | -updateArrangement():void                                                         |
       | +addPage(noteLab.materials.Page):void                                             |
       | +getNumColumns():int                                                              |
       | +getPageIndexAtPoint(noteLab.util.geom.MPoint):int                                |
       | +setCurrentPageIndex(int):void                                                    |
       | +isInCurrentPage(noteLab.util.geom.MPoint):boolean                                |
       | +getCurrentPageIndex():int                                                        |
       | -getPointRelativeToCurrentPage(noteLab.util.geom.MPoint):noteLab.util.geom.MPoint |
       | -getCurrentLocatedPage():noteLab.materials.Binder$LocatedPage                     |
       | +getClippedPoint(noteLab.util.geom.MPoint):noteLab.util.geom.MPoint               |
       | +appendSVGCode(StringBuffer):void                                                 |
        ----------------------------------------------------------------------------------- 
        ------------------------------------------------------------------------------------------------------------------- 
       | noteLab.materials.Binder$LocatedPage                                                                              |
       |-------------------------------------------------------------------------------------------------------------------|
       | +page:noteLab.materials.Page                                                                                      |
       | +location:noteLab.util.geom.MPoint                                                                                |
       | this$0:noteLab.materials.Binder                                                                                   |
       |-------------------------------------------------------------------------------------------------------------------|
       | +noteLab.materials.Binder$LocatedPage(noteLab.materials.Binder, noteLab.materials.Page)                           |
       | +noteLab.materials.Binder$LocatedPage(noteLab.materials.Binder, noteLab.materials.Page, noteLab.util.geom.MPoint) |
       |-------------------------------------------------------------------------------------------------------------------|
        ------------------------------------------------------------------------------------------------------------------- 
        -------------------------------------------------------------- 
       | noteLab.gui.BinderCanvas                                     |
       |--------------------------------------------------------------|
       | -binder:noteLab.materials.Binder                             |
       | -tool:noteLab.materials.tools.Tool                           |
       | -zoomTransform:noteLab.util.geom.MAffineTransform            |
       | -zoomTransformInverse:AffineTransform                        |
       | -zoomFactor:double                                           |
       |--------------------------------------------------------------|
       | +noteLab.gui.BinderCanvas(noteLab.materials.tools.Tool)      |
       |--------------------------------------------------------------|
       | +main([Ljava.lang.String;):void                              |
       | +paint(Graphics):void                                        |
       | access$0(noteLab.gui.BinderCanvas):noteLab.materials.Binder  |
       | access$1(noteLab.gui.BinderCanvas):AffineTransform           |
       | +setTool(noteLab.materials.tools.Tool):void                  |
       | +setZoomFactor(double):void                                  |
       | +getTool():noteLab.materials.tools.Tool                      |
       | +getZoomFactor():double                                      |
       | +zoomBy(double):void                                         |
       | +getMTransform():noteLab.util.geom.MAffineTransform          |
       | +getBinder():noteLab.materials.Binder                        |
       | -updatePreferredSize():void                                  |
       | -getZoomTransformInverse():AffineTransform                   |
        -------------------------------------------------------------- 
        -------------------------------------------------------------------------- 
       | noteLab.gui.BinderCanvas$StylusMotionListener                            |
       |--------------------------------------------------------------------------|
       | this$0:noteLab.gui.BinderCanvas                                          |
       |--------------------------------------------------------------------------|
       | +noteLab.gui.BinderCanvas$StylusMotionListener(noteLab.gui.BinderCanvas) |
       |--------------------------------------------------------------------------|
       | +mouseClicked(MouseEvent):void                                           |
       | +mouseDragged(MouseEvent):void                                           |
       | +mouseEntered(MouseEvent):void                                           |
       | +mouseExited(MouseEvent):void                                            |
       | +mouseMoved(MouseEvent):void                                             |
       | +mousePressed(MouseEvent):void                                           |
       | +mouseReleased(MouseEvent):void                                          |
       | -addPoint(MouseEvent):void                                               |
       | -createStroke(MouseEvent):void                                           |
       | -getPixelPoint(Point):noteLab.util.geom.MPoint                           |
        -------------------------------------------------------------------------- 
        ----------------------------------------------------------------- 
       | noteLab.util.state.value.ColorValue                             |
       |-----------------------------------------------------------------|
       | -color:Color                                                    |
       |-----------------------------------------------------------------|
       | +noteLab.util.state.value.ColorValue()                          |
       | +noteLab.util.state.value.ColorValue(Color)                     |
       |-----------------------------------------------------------------|
       | +setColor(Color):void                                           |
       | +getColor():Color                                               |
       | +getValueFromString(String):noteLab.util.state.value.ColorValue |
       | +getValueFromString(String):Object                              |
       | +getStringFromValue():String                                    |
        ----------------------------------------------------------------- 
        ----------------------------------------------------- 
       | noteLab.gui.ColorfulButton                          |
       |-----------------------------------------------------|
       | -color:Color                                        |
       | -chooserDialog:JDialog                              |
       | -colorChooser:JColorChooser                         |
       | -enabled:boolean                                    |
       |-----------------------------------------------------|
       | +noteLab.gui.ColorfulButton(Color)                  |
       |-----------------------------------------------------|
       | +setEnabled(boolean):void                           |
       | #paintComponent(Graphics):void                      |
       | +setColor(Color):void                               |
       | +actionPerformed(ActionEvent):void                  |
       | +getColor():Color                                   |
       | access$0(noteLab.gui.ColorfulButton):JColorChooser  |
       | access$1(noteLab.gui.ColorfulButton):JDialog        |
        ----------------------------------------------------- 
        ------------------------------------------------------------------------ 
       | noteLab.gui.ColorfulButton$CancelListener                              |
       |------------------------------------------------------------------------|
       | this$0:noteLab.gui.ColorfulButton                                      |
       |------------------------------------------------------------------------|
       | noteLab.gui.ColorfulButton$CancelListener(noteLab.gui.ColorfulButton)  |
       |------------------------------------------------------------------------|
       | +actionPerformed(ActionEvent):void                                     |
        ------------------------------------------------------------------------ 
        -------------------------------------------------------------------- 
       | noteLab.gui.ColorfulButton$OkListener                              |
       |--------------------------------------------------------------------|
       | this$0:noteLab.gui.ColorfulButton                                  |
       |--------------------------------------------------------------------|
       | noteLab.gui.ColorfulButton$OkListener(noteLab.gui.ColorfulButton)  |
       |--------------------------------------------------------------------|
       | +actionPerformed(ActionEvent):void                                 |
        -------------------------------------------------------------------- 
        ------------------------ 
       | noteLab.util.CopyReady |
       |------------------------|
       | +getCopy():Object      |
        ------------------------ 
        ------------------------------------------ 
       | noteLab.gui.DefinedIcon                  |
       |------------------------------------------|
       | +bigeraser2:noteLab.gui.DefinedIcon      |
       | +bigeraser:noteLab.gui.DefinedIcon       |
       | +blank:noteLab.gui.DefinedIcon           |
       | +box:noteLab.gui.DefinedIcon             |
       | +browser:noteLab.gui.DefinedIcon         |
       | +bsp:noteLab.gui.DefinedIcon             |
       | +calc:noteLab.gui.DefinedIcon            |
       | +cap:noteLab.gui.DefinedIcon             |
       | +clockcursor:noteLab.gui.DefinedIcon     |
       | +clock:noteLab.gui.DefinedIcon           |
       | +clonedoc:noteLab.gui.DefinedIcon        |
       | +defaultPen:noteLab.gui.DefinedIcon      |
       | +dotblk3:noteLab.gui.DefinedIcon         |
       | +dotblk:noteLab.gui.DefinedIcon          |
       | +editcopy:noteLab.gui.DefinedIcon        |
       | +editcut:noteLab.gui.DefinedIcon         |
       | +editpaste:noteLab.gui.DefinedIcon       |
       | +erasebot:noteLab.gui.DefinedIcon        |
       | +eraser:noteLab.gui.DefinedIcon          |
       | +erasetop:noteLab.gui.DefinedIcon        |
       | +fat:noteLab.gui.DefinedIcon             |
       | +filesave:noteLab.gui.DefinedIcon        |
       | +fine:noteLab.gui.DefinedIcon            |
       | +fullscreen:noteLab.gui.DefinedIcon      |
       | +handcursor:noteLab.gui.DefinedIcon      |
       | +handmixed2:noteLab.gui.DefinedIcon      |
       | +handmixed:noteLab.gui.DefinedIcon       |
       | +hand:noteLab.gui.DefinedIcon            |
       | +handstop:noteLab.gui.DefinedIcon        |
       | +handyellow:noteLab.gui.DefinedIcon      |
       | +heavy:noteLab.gui.DefinedIcon           |
       | +highcursor:noteLab.gui.DefinedIcon      |
       | +highlighterdef:noteLab.gui.DefinedIcon  |
       | +highlightermag:noteLab.gui.DefinedIcon  |
       | +highlighteryel:noteLab.gui.DefinedIcon  |
       | +lc:noteLab.gui.DefinedIcon              |
       | +leftarrow1:noteLab.gui.DefinedIcon      |
       | +leftarrow2:noteLab.gui.DefinedIcon      |
       | +medium:noteLab.gui.DefinedIcon          |
       | +multi3:noteLab.gui.DefinedIcon          |
       | +multi:noteLab.gui.DefinedIcon           |
       | +newdoc:noteLab.gui.DefinedIcon          |
       | +newPage:noteLab.gui.DefinedIcon         |
       | +num:noteLab.gui.DefinedIcon             |
       | +paintbrush:noteLab.gui.DefinedIcon      |
       | +pencilblk:noteLab.gui.DefinedIcon       |
       | +pencilblu:noteLab.gui.DefinedIcon       |
       | +pencilred:noteLab.gui.DefinedIcon       |
       | +razor:noteLab.gui.DefinedIcon           |
       | +redo:noteLab.gui.DefinedIcon            |
       | +rightarrow1:noteLab.gui.DefinedIcon     |
       | +rightarrow2:noteLab.gui.DefinedIcon     |
       | +rtn:noteLab.gui.DefinedIcon             |
       | +ruler:noteLab.gui.DefinedIcon           |
       | +select:noteLab.gui.DefinedIcon          |
       | +selectrect:noteLab.gui.DefinedIcon      |
       | +spc:noteLab.gui.DefinedIcon             |
       | +sym:noteLab.gui.DefinedIcon             |
       | +text:noteLab.gui.DefinedIcon            |
       | +threepages:noteLab.gui.DefinedIcon      |
       | +thumbs:noteLab.gui.DefinedIcon          |
       | +undo:noteLab.gui.DefinedIcon            |
       | +user:noteLab.gui.DefinedIcon            |
       | +viewmagfit:noteLab.gui.DefinedIcon      |
       | +viewmagMinus:noteLab.gui.DefinedIcon    |
       | +viewmagPlus:noteLab.gui.DefinedIcon     |
       | +whitecursor:noteLab.gui.DefinedIcon     |
       | +whiteout:noteLab.gui.DefinedIcon        |
       | +collegeRuled:noteLab.gui.DefinedIcon    |
       | +wideRuled:noteLab.gui.DefinedIcon       |
       | +graph:noteLab.gui.DefinedIcon           |
       | -EXT:String                              |
       | -ENUM$VALUES:[LnoteLab.gui.DefinedIcon;  |
       |------------------------------------------|
       | -noteLab.gui.DefinedIcon(String, int)    |
       |------------------------------------------|
       | +toString():String                       |
       | +valueOf(String):noteLab.gui.DefinedIcon |
       | +values():[LnoteLab.gui.DefinedIcon;     |
        ------------------------------------------ 
        ---------------------------------------------- 
       | noteLab.util.InfoCenter                      |
       |----------------------------------------------|
       | -NAME:String                                 |
       | -VERSION:String                              |
       | -ICON_PATH_NAME:String                       |
       | -PREF_HOME_NAME:String                       |
       | -APP_HOME:File                               |
       | -PREF_HOME:File                              |
       |----------------------------------------------|
       | -noteLab.util.InfoCenter()                   |
       |----------------------------------------------|
       | +main([Ljava.lang.String;):void              |
       | -mkdir(File):String                          |
       | +getImage(noteLab.gui.DefinedIcon):ImageIcon |
       | +getAppName():String                         |
       | +getAppHome():File                           |
       | +getAppVersion():String                      |
       | +getPreferencesHome():File                   |
       | +isAppHomeValid():String                     |
       | -isDirValid(File):String                     |
       | +buildAppHome():String                       |
        ---------------------------------------------- 
        ------------------------------------------------------------------------- 
       | noteLab.util.geom.MAffineTransform                                      |
       |-------------------------------------------------------------------------|
       | -unit:noteLab.util.geom.unit.Unit                                       |
       |-------------------------------------------------------------------------|
       | +noteLab.util.geom.MAffineTransform(noteLab.util.geom.unit.Unit)        |
       | +noteLab.util.geom.MAffineTransform([D, noteLab.util.geom.unit.Unit)    |
       |-------------------------------------------------------------------------|
       | +transform(noteLab.util.geom.unit.MValue):noteLab.util.geom.unit.MValue |
       | +transform(noteLab.util.geom.MPoint):noteLab.util.geom.MPoint           |
       | +transform(noteLab.util.geom.MDimension):noteLab.util.geom.MDimension   |
       | +transform(noteLab.util.geom.MLine):noteLab.util.geom.MLine             |
       | +transform(noteLab.util.geom.MRectangle):noteLab.util.geom.MRectangle   |
       | +setMatrix([D):void                                                     |
        ------------------------------------------------------------------------- 
        --------------------------------------------------------------------------------------------- 
       | noteLab.util.geom.MDimension                                                                |
       |---------------------------------------------------------------------------------------------|
       | -length:noteLab.util.geom.unit.MValue                                                       |
       | -width:noteLab.util.geom.unit.MValue                                                        |
       |---------------------------------------------------------------------------------------------|
       | +noteLab.util.geom.MDimension(noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue) |
       |---------------------------------------------------------------------------------------------|
       | +toString():String                                                                          |
       | +setLength(noteLab.util.geom.unit.MValue):void                                              |
       | +getLength():noteLab.util.geom.unit.MValue                                                  |
       | +getWidth():noteLab.util.geom.unit.MValue                                                   |
       | +getCopy():noteLab.util.geom.MDimension                                                     |
       | +getCopy():Object                                                                           |
       | +setWidth(noteLab.util.geom.unit.MValue):void                                               |
        --------------------------------------------------------------------------------------------- 
        ------------------------------------------------------------------------------ 
       | noteLab.util.geom.MLine                                                      |
       |------------------------------------------------------------------------------|
       | -point1:noteLab.util.geom.MPoint                                             |
       | -point2:noteLab.util.geom.MPoint                                             |
       |------------------------------------------------------------------------------|
       | +noteLab.util.geom.MLine(noteLab.util.geom.MPoint, noteLab.util.geom.MPoint) |
       |------------------------------------------------------------------------------|
       | +getCopy():noteLab.util.geom.MLine                                           |
       | +getCopy():Object                                                            |
       | +getPoint1():noteLab.util.geom.MPoint                                        |
       | +getPoint2():noteLab.util.geom.MPoint                                        |
       | +setPoint1(noteLab.util.geom.MPoint):void                                    |
       | +setPoint2(noteLab.util.geom.MPoint):void                                    |
        ------------------------------------------------------------------------------ 
        ----------------------------------------------------------------------------------------------------------------------- 
       | noteLab.util.geom.MPoint                                                                                              |
       |-----------------------------------------------------------------------------------------------------------------------|
       | -x:noteLab.util.geom.unit.MValue                                                                                      |
       | -y:noteLab.util.geom.unit.MValue                                                                                      |
       |-----------------------------------------------------------------------------------------------------------------------|
       | +noteLab.util.geom.MPoint(noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue)                               |
       |-----------------------------------------------------------------------------------------------------------------------|
       | +toString():String                                                                                                    |
       | +getX():noteLab.util.geom.unit.MValue                                                                                 |
       | +getY():noteLab.util.geom.unit.MValue                                                                                 |
       | +getCopy():noteLab.util.geom.MPoint                                                                                   |
       | +getCopy():Object                                                                                                     |
       | +difference(noteLab.util.geom.unit.Unit, noteLab.util.geom.MPoint, noteLab.util.geom.MPoint):noteLab.util.geom.MPoint |
       | +setX(noteLab.util.geom.unit.MValue):void                                                                             |
       | +setY(noteLab.util.geom.unit.MValue):void                                                                             |
       | +sum(noteLab.util.geom.unit.Unit, [LnoteLab.util.geom.MPoint;):noteLab.util.geom.MPoint                               |
        ----------------------------------------------------------------------------------------------------------------------- 
        --------------------------------------------------------------------------------------- 
       | noteLab.util.geom.MRectangle                                                          |
       |---------------------------------------------------------------------------------------|
       | -topLeftCorner:noteLab.util.geom.MPoint                                               |
       | -dimension:noteLab.util.geom.MDimension                                               |
       |---------------------------------------------------------------------------------------|
       | +noteLab.util.geom.MRectangle(noteLab.util.geom.MPoint, noteLab.util.geom.MDimension) |
       |---------------------------------------------------------------------------------------|
       | +getDimension():noteLab.util.geom.MDimension                                          |
       | +getTopLeftCorner():noteLab.util.geom.MPoint                                          |
       | +setTopLeftCorner(noteLab.util.geom.MPoint):void                                      |
       | +setDimension(noteLab.util.geom.MDimension):void                                      |
        --------------------------------------------------------------------------------------- 
        -------------------------------------------------------------------------------------------------------------------------------------- 
       | noteLab.util.geom.unit.MValue                                                                                                        |
       |--------------------------------------------------------------------------------------------------------------------------------------|
       | -PIXEL_PER_INCH:int                                                                                                                  |
       | -CM_PER_INCH:float                                                                                                                   |
       | -value:double                                                                                                                        |
       | -unit:noteLab.util.geom.unit.Unit                                                                                                    |
       |--------------------------------------------------------------------------------------------------------------------------------------|
       | +noteLab.util.geom.unit.MValue(double, noteLab.util.geom.unit.Unit)                                                                  |
       |--------------------------------------------------------------------------------------------------------------------------------------|
       | +main([Ljava.lang.String;):void                                                                                                      |
       | +toString():String                                                                                                                   |
       | +getValue():double                                                                                                                   |
       | +getValue(noteLab.util.geom.unit.Unit):double                                                                                        |
       | +getValue(double, noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.Unit):double                                                   |
       | +setValue(double):void                                                                                                               |
       | +getCopy():noteLab.util.geom.unit.MValue                                                                                             |
       | +getCopy():Object                                                                                                                    |
       | +difference(noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue):noteLab.util.geom.unit.MValue |
       | +setUnit(noteLab.util.geom.unit.Unit):void                                                                                           |
       | +getUnit():noteLab.util.geom.unit.Unit                                                                                               |
       | +quotient(noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue):noteLab.util.geom.unit.MValue   |
       | +sum(noteLab.util.geom.unit.Unit, [LnoteLab.util.geom.unit.MValue;):noteLab.util.geom.unit.MValue                                    |
       | +product(noteLab.util.geom.unit.Unit, [LnoteLab.util.geom.unit.MValue;):noteLab.util.geom.unit.MValue                                |
       | +isGreater(noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue):boolean                        |
       | +isGreaterOrEqual(noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue):boolean                 |
       | +isLess(noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue):boolean                           |
       | +isLessOrEqual(noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue):boolean                    |
        -------------------------------------------------------------------------------------------------------------------------------------- 
        ------------------------------------------------------------------------------------------------------ 
       | noteLab.gui.geom.MValueControl                                                                       |
       |------------------------------------------------------------------------------------------------------|
       | -spinner:JSpinner                                                                                    |
       | -unitCombo:noteLab.gui.geom.UnitComboBox                                                             |
       |------------------------------------------------------------------------------------------------------|
       | +noteLab.gui.geom.MValueControl(String, double, double, double, double, noteLab.util.geom.unit.Unit) |
       |------------------------------------------------------------------------------------------------------|
       | +getValue():noteLab.util.geom.unit.MValue                                                            |
       | +setMValue(noteLab.util.geom.unit.MValue):void                                                       |
        ------------------------------------------------------------------------------------------------------ 
        ---------------------------------- 
       | noteLab.gui.MainFrame            |
       |----------------------------------|
       | -toolbarPanel:JPanel             |
       | -canvas:noteLab.gui.BinderCanvas |
       |----------------------------------|
       | +noteLab.gui.MainFrame()         |
       | +noteLab.gui.MainFrame(int, int) |
       |----------------------------------|
       | +main([Ljava.lang.String;):void  |
        ---------------------------------- 
        ------------------------------------------------- 
       | noteLab.util.state.value.MutableNumber          |
       |-------------------------------------------------|
       | -value:double                                   |
       |-------------------------------------------------|
       | +noteLab.util.state.value.MutableNumber(int)    |
       | +noteLab.util.state.value.MutableNumber(double) |
       | +noteLab.util.state.value.MutableNumber(String) |
       |-------------------------------------------------|
       | +main([Ljava.lang.String;):void                 |
       | +toString():String                              |
       | +setIntValue(int):void                          |
       | +setDoubleValue(double):void                    |
       | +getIntValue():int                              |
       | +getDoubleValue():double                        |
        ------------------------------------------------- 
        ------------------------------------------------------------------------------- 
       | noteLab.util.state.value.NumberValue                                          |
       |-------------------------------------------------------------------------------|
       | -number:noteLab.util.state.value.MutableNumber                                |
       |-------------------------------------------------------------------------------|
       | +noteLab.util.state.value.NumberValue()                                       |
       | +noteLab.util.state.value.NumberValue(noteLab.util.state.value.MutableNumber) |
       |-------------------------------------------------------------------------------|
       | +getNumber():noteLab.util.state.value.MutableNumber                           |
       | +getValueFromString(String):noteLab.util.state.value.NumberValue              |
       | +getValueFromString(String):Object                                            |
       | +getStringFromValue():String                                                  |
       | -setNumber(noteLab.util.state.value.MutableNumber):void                       |
        ------------------------------------------------------------------------------- 
        ------------------------------------------------------------- 
       | noteLab.util.state.ObjectState                              |
       |-------------------------------------------------------------|
       | -CLASS_SUFFIX:String                                        |
       | -table:Hashtable                                            |
       | -comment:String                                             |
       |-------------------------------------------------------------|
       | +noteLab.util.state.ObjectState()                           |
       | +noteLab.util.state.ObjectState(String)                     |
       |-------------------------------------------------------------|
       | +main([Ljava.lang.String;):void                             |
       | +toString():String                                          |
       | +getValue(String):noteLab.util.state.StringRecordable       |
       | +load(File):noteLab.util.state.ObjectState                  |
       | +save(File):void                                            |
       | +containsKey(String):boolean                                |
       | +getComment():String                                        |
       | +setComment(String):void                                    |
       | +putValue(String, noteLab.util.state.StringRecordable):void |
        ------------------------------------------------------------- 
        ------------------------------------------------------- 
       | noteLab.util.state.ObjectStateAccessible              |
       |-------------------------------------------------------|
       | +getDefaultObjectState():noteLab.util.state.ObjectState |
       | +getObjectState():noteLab.util.state.ObjectState      |
       | +setObjectState(noteLab.util.state.ObjectState):void  |
        ------------------------------------------------------- 
        ------------------------------------------ 
       | noteLab.util.state.ObjectStateUtilities  |
       |------------------------------------------|
       | -noteLab.util.state.ObjectStateUtilities() |
       |------------------------------------------|
        ------------------------------------------ 
        -------------------------------------------------------------------------------------------------- 
       | noteLab.materials.Paper                                                                          |
       |--------------------------------------------------------------------------------------------------|
       | -GRID_WIDTH:int                                                                                  |
       | -COLLEGE_WIDTH:int                                                                               |
       | -WIDE_WIDTH:int                                                                                  |
       | -dimension:noteLab.util.geom.MDimension                                                          |
       | -type:noteLab.materials.Paper$PaperType                                                          |
       |--------------------------------------------------------------------------------------------------|
       | +noteLab.materials.Paper(noteLab.materials.Paper$PaperType, noteLab.util.geom.MDimension)        |
       |--------------------------------------------------------------------------------------------------|
       | +setLength(noteLab.util.geom.unit.MValue):void                                                   |
       | +getLength():noteLab.util.geom.unit.MValue                                                       |
       | +getWidth():noteLab.util.geom.unit.MValue                                                        |
       | +getDimension():noteLab.util.geom.MDimension                                                     |
       | +getCopy():noteLab.materials.Paper                                                               |
       | +getCopy():Object                                                                                |
       | +setWidth(noteLab.util.geom.unit.MValue):void                                                    |
       | +renderInto(Graphics2D, noteLab.util.geom.MAffineTransform):void                                 |
       | +getPaperType():noteLab.materials.Paper$PaperType                                                |
       | +setDimension(noteLab.util.geom.MDimension):void                                                 |
       | +setPaperType(noteLab.materials.Paper$PaperType):void                                            |
       | -getPixelWidth(noteLab.util.geom.MAffineTransform):int                                           |
       | -getPixelHeight(noteLab.util.geom.MAffineTransform):int                                          |
       | -renderLinesAcross(Graphics2D, int, int, int, int, int, noteLab.util.geom.MAffineTransform):void |
       | -renderLinesDown(Graphics2D, int, int, int, int, int, noteLab.util.geom.MAffineTransform):void   |
       | -renderLinedPage(Graphics2D, int, noteLab.util.geom.MAffineTransform):void                       |
       | -transformPixelLength(int, noteLab.util.geom.MAffineTransform):int                               |
        -------------------------------------------------------------------------------------------------- 
        -------------------------------------------------------- 
       | noteLab.materials.PageAdapter                          |
       |--------------------------------------------------------|
       | -SAVE_KEY:String                                       |
       | -page:noteLab.materials.Page                           |
       |--------------------------------------------------------|
       | +noteLab.materials.PageAdapter(noteLab.materials.Page) |
       |--------------------------------------------------------|
       | +getTitle():String                                     |
       | +getSaveKey():String                                   |
       | +getOptionsPanel():JPanel                              |
        -------------------------------------------------------- 
        ---------------------------------------------------- 
       | noteLab.materials.Paper$PaperType                  |
       |----------------------------------------------------|
       | +Plain:noteLab.materials.Paper$PaperType           |
       | +Graph:noteLab.materials.Paper$PaperType           |
       | +CollegeRuled:noteLab.materials.Paper$PaperType    |
       | +WideRuled:noteLab.materials.Paper$PaperType       |
       | -ENUM$VALUES:[LnoteLab.materials.Paper$PaperType;  |
       |----------------------------------------------------|
       | -noteLab.materials.Paper$PaperType(String, int)    |
       |----------------------------------------------------|
       | +valueOf(String):noteLab.materials.Paper$PaperType |
       | +values():[LnoteLab.materials.Paper$PaperType;     |
        ---------------------------------------------------- 
        ------------------------------------------------------------ 
       | noteLab.gui.toolbar.PageToolBar                            |
       |------------------------------------------------------------|
       | -PLAIN_PAPER:String                                        |
       | -GRAPH_PAPER:String                                        |
       | -WIDE_RULED_PAPER:String                                   |
       | -COLLEGE_RULED_PAPER:String                                |
       | -ZOOM_OUT:String                                           |
       | -ZOOM_NORMAL:String                                        |
       | -ZOOM_IN:String                                            |
       | -CONTINUOUS:String                                         |
       | -THUMBS:String                                             |
       | -NEW_PAGE:String                                           |
       | -COPY_PAGE:String                                          |
       | -ZOOM_IN_FACTOR:double                                     |
       | -ZOOM_OUT_FACTOR:double                                    |
       | -plainButton:JButton                                       |
       | -graphButton:JButton                                       |
       | -collegeButton:JButton                                     |
       | -wideButton:JButton                                        |
       | -zoomInButton:JButton                                      |
       | -zoomNormalButton:JButton                                  |
       | -zoomOutButton:JButton                                     |
       | -contButton:JButton                                        |
       | -quadButton:JButton                                        |
       | -newPageButton:JButton                                     |
       | -copyPageButton:JButton                                    |
       | -canvas:noteLab.gui.BinderCanvas                           |
       |------------------------------------------------------------|
       | +noteLab.gui.toolbar.PageToolBar(noteLab.gui.BinderCanvas) |
       |------------------------------------------------------------|
       | +actionPerformed(ActionEvent):void                         |
        ------------------------------------------------------------ 
        ------------------------------------------------------------------------------------------ 
       | noteLab.materials.tools.Pen                                                              |
       |------------------------------------------------------------------------------------------|
       | -PEN_NAME:String                                                                         |
       | -PEN_HOT_SPOT:Point                                                                      |
       | -WIDTH_KEY:String                                                                        |
       | -COLOR_KEY:String                                                                        |
       | -DEFAULT_WIDTH:int                                                                       |
       | -DEFAULT_COLOR:Color                                                                     |
       | -DEFAULT_STATE:noteLab.util.state.ObjectState                                            |
       | -width:int                                                                               |
       | -color:Color                                                                             |
       | -penImage:BufferedImage                                                                  |
       |------------------------------------------------------------------------------------------|
       | +noteLab.materials.tools.Pen()                                                           |
       | +noteLab.materials.tools.Pen(int, Color)                                                 |
       |------------------------------------------------------------------------------------------|
       | +getWidth():float                                                                        |
       | +setColor(Color):void                                                                    |
       | +getColor():Color                                                                        |
       | +drawLine(Graphics2D, noteLab.util.geom.MPoint, noteLab.util.geom.MAffineTransform):void |
       | +getCopy():noteLab.materials.tools.Pen                                                   |
       | +getCopy():Object                                                                        |
       | +setWidth(int):void                                                                      |
       | +getToolImage():Image                                                                    |
       | +getToolHotSpot():Point                                                                  |
       | +getToolName():String                                                                    |
       | +getDefaultObjectState():noteLab.util.state.ObjectState                                  |
       | +getObjectState():noteLab.util.state.ObjectState                                         |
       | +setObjectState(noteLab.util.state.ObjectState):void                                     |
       | +renderInto(Graphics2D):void                                                             |
       | -fillObjectState(noteLab.util.state.ObjectState, float, Color):void                      |
       | -drawPenImage():void                                                                     |
       | -constructJavaStroke():BasicStroke                                                       |
        ------------------------------------------------------------------------------------------ 
        ----------------------------------------------------------- 
       | noteLab.gui.toolbar.PenToolBar                            |
       |-----------------------------------------------------------|
       | -SELECT_PEN:String                                        |
       | -penWidth:noteLab.gui.toolbar.PenToolBar$PenWidth         |
       | -penColor:noteLab.gui.toolbar.PenToolBar$PenColor         |
       | -pen:noteLab.materials.tools.Pen                          |
       | -canvas:noteLab.gui.BinderCanvas                          |
       |-----------------------------------------------------------|
       | +noteLab.gui.toolbar.PenToolBar(noteLab.gui.BinderCanvas) |
       |-----------------------------------------------------------|
       | +actionPerformed(ActionEvent):void                        |
       | +getPen():noteLab.materials.tools.Pen                     |
       | -setPen(noteLab.materials.tools.Pen):void                 |
       | -adjustPen():void                                         |
        ----------------------------------------------------------- 
        ----------------------------------------------------------- 
       | noteLab.gui.toolbar.PenToolBar$PenColor                   |
       |-----------------------------------------------------------|
       | +black:noteLab.gui.toolbar.PenToolBar$PenColor            |
       | +blue:noteLab.gui.toolbar.PenToolBar$PenColor             |
       | +red:noteLab.gui.toolbar.PenToolBar$PenColor              |
       | +white:noteLab.gui.toolbar.PenToolBar$PenColor            |
       | -$SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenColor:[I |
       | -ENUM$VALUES:[LnoteLab.gui.toolbar.PenToolBar$PenColor;   |
       |-----------------------------------------------------------|
       | noteLab.gui.toolbar.PenToolBar$PenColor(String, int)      |
       |-----------------------------------------------------------|
       | +valueOf(String):noteLab.gui.toolbar.PenToolBar$PenColor  |
       | +values():[LnoteLab.gui.toolbar.PenToolBar$PenColor;      |
       | +getColor():Color                                         |
       | $SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenColor():[I |
        ----------------------------------------------------------- 
        ----------------------------------------------------------- 
       | noteLab.gui.toolbar.PenToolBar$PenWidth                   |
       |-----------------------------------------------------------|
       | +fine:noteLab.gui.toolbar.PenToolBar$PenWidth             |
       | +medium:noteLab.gui.toolbar.PenToolBar$PenWidth           |
       | +thick:noteLab.gui.toolbar.PenToolBar$PenWidth            |
       | -$SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenWidth:[I |
       | -ENUM$VALUES:[LnoteLab.gui.toolbar.PenToolBar$PenWidth;   |
       |-----------------------------------------------------------|
       | noteLab.gui.toolbar.PenToolBar$PenWidth(String, int)      |
       |-----------------------------------------------------------|
       | +valueOf(String):noteLab.gui.toolbar.PenToolBar$PenWidth  |
       | +values():[LnoteLab.gui.toolbar.PenToolBar$PenWidth;      |
       | +getWidth():int                                           |
       | $SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenWidth():[I |
        ----------------------------------------------------------- 
        ------------------------------------- 
       | noteLab.gui.prefs.PreferenceAdapter |
       |-------------------------------------|
       | +getTitle():String                  |
       | +getSaveKey():String                |
       | +getOptionsPanel():JPanel           |
        ------------------------------------- 
        ----------------------------------------------------------- 
       | noteLab.gui.prefs.PreferenceCapable                       |
       |-----------------------------------------------------------|
       | +getPreferenceAdapter():noteLab.gui.prefs.PreferenceAdapter |
        ----------------------------------------------------------- 
        --------------------------------------------------------- 
       | noteLab.gui.PreferencesFrame                            |
       |---------------------------------------------------------|
       | -SAVE_TEXT:String                                       |
       | -DEFAULTS_TEXT:String                                   |
       | -REVERT_TEXT:String                                     |
       | -CANCEL_TEXT:String                                     |
       | -canvas:noteLab.gui.BinderCanvas                        |
       | -tabbedPane:JTabbedPane                                 |
       |---------------------------------------------------------|
       | +noteLab.gui.PreferencesFrame(noteLab.gui.BinderCanvas) |
       |---------------------------------------------------------|
       | +actionPerformed(ActionEvent):void                      |
       | -addTab(noteLab.gui.prefs.PreferenceCapable):void       |
        --------------------------------------------------------- 
        ------------------------------------------------------------------ 
       | noteLab.gui.Renderable                                           |
       |------------------------------------------------------------------|
       | +renderInto(Graphics2D, noteLab.util.geom.MAffineTransform):void |
        ------------------------------------------------------------------ 
        ----------------------------------- 
       | noteLab.util.save.SVGExportable   |
       |-----------------------------------|
       | +appendSVGCode(StringBuffer):void |
        ----------------------------------- 
        ------------------------------------- 
       | noteLab.util.state.StringRecordable |
       |-------------------------------------|
       | +getValueFromString(String):Object  |
       | +getStringFromValue():String        |
        ------------------------------------- 
        ------------------------------------------------------------------------------------------ 
       | noteLab.materials.stroke.Stroke                                                          |
       |------------------------------------------------------------------------------------------|
       | -lineList:LinkedList                                                                     |
       | -tool:noteLab.materials.tools.Tool                                                       |
       | -curPoint:noteLab.util.geom.MPoint                                                       |
       | -svgGen:noteLab.materials.stroke.StrokeSVGGenerator                                      |
       | -printMan:noteLab.materials.stroke.StrokePrintManager                                    |
       |------------------------------------------------------------------------------------------|
       | +noteLab.materials.stroke.Stroke(noteLab.materials.tools.Tool, noteLab.util.geom.MPoint) |
       |------------------------------------------------------------------------------------------|
       | +print(Graphics, PageFormat, int):int                                                    |
       | +getCopy():noteLab.materials.stroke.Stroke                                               |
       | +getCopy():Object                                                                        |
       | +addPoint(noteLab.util.geom.MPoint):void                                                 |
       | +setTool(noteLab.materials.tools.Tool):void                                              |
       | +renderInto(Graphics2D, noteLab.util.geom.MAffineTransform):void                         |
       | +getTool():noteLab.materials.tools.Tool                                                  |
       | +finishStroke():void                                                                     |
       | +appendSVGCode(StringBuffer):void                                                        |
       | -setCurrentPoint(noteLab.util.geom.MPoint):void                                          |
        ------------------------------------------------------------------------------------------ 
        ------------------------------------------------------------------------------------------ 
       | noteLab.materials.Page                                                                   |
       |------------------------------------------------------------------------------------------|
       | -dimension:noteLab.util.geom.MDimension                                                  |
       | -strokeList:LinkedList                                                                   |
       | -paper:noteLab.materials.Paper                                                           |
       |------------------------------------------------------------------------------------------|
       | +noteLab.materials.Page()                                                                |
       | +noteLab.materials.Page(noteLab.util.geom.MDimension)                                    |
       | +noteLab.materials.Page(noteLab.util.geom.MDimension, noteLab.materials.Paper$PaperType) |
       |------------------------------------------------------------------------------------------|
       | +toString():String                                                                       |
       | +print(Graphics, PageFormat, int):int                                                    |
       | +setLength(noteLab.util.geom.unit.MValue):void                                           |
       | +getLength():noteLab.util.geom.unit.MValue                                               |
       | +getWidth():noteLab.util.geom.unit.MValue                                                |
       | +getDimension():noteLab.util.geom.MDimension                                             |
       | +getCopy():noteLab.materials.Page                                                        |
       | +getCopy():Object                                                                        |
       | +setWidth(noteLab.util.geom.unit.MValue):void                                            |
       | +getDefaultObjectState():noteLab.util.state.ObjectState                                  |
       | +getObjectState():noteLab.util.state.ObjectState                                         |
       | +setObjectState(noteLab.util.state.ObjectState):void                                     |
       | +renderInto(Graphics2D, noteLab.util.geom.MAffineTransform):void                         |
       | +getPaper():noteLab.materials.Paper                                                      |
       | +addStroke(noteLab.materials.stroke.Stroke):void                                         |
       | +appendSVGCode(StringBuffer):void                                                        |
       | +setDimension(noteLab.util.geom.MDimension):void                                         |
       | +setPaper(noteLab.materials.Paper$PaperType):void                                        |
        ------------------------------------------------------------------------------------------ 
        ------------------------------------------------------------------------------- 
       | noteLab.materials.stroke.StrokePrintManager                                   |
       |-------------------------------------------------------------------------------|
       | -stroke:noteLab.materials.stroke.Stroke                                       |
       |-------------------------------------------------------------------------------|
       | +noteLab.materials.stroke.StrokePrintManager(noteLab.materials.stroke.Stroke) |
       |-------------------------------------------------------------------------------|
       | +print(Graphics, PageFormat, int):int                                         |
       | +getStroke():noteLab.materials.stroke.Stroke                                  |
       | +setStroke(noteLab.materials.stroke.Stroke):void                              |
        ------------------------------------------------------------------------------- 
        ------------------------------------------------------------------------------- 
       | noteLab.materials.stroke.StrokeSVGGenerator                                   |
       |-------------------------------------------------------------------------------|
       | -stroke:noteLab.materials.stroke.Stroke                                       |
       |-------------------------------------------------------------------------------|
       | +noteLab.materials.stroke.StrokeSVGGenerator(noteLab.materials.stroke.Stroke) |
       |-------------------------------------------------------------------------------|
       | +getStroke():noteLab.materials.stroke.Stroke                                  |
       | +setStroke(noteLab.materials.stroke.Stroke):void                              |
       | +appendSVGCode(StringBuffer):void                                             |
        ------------------------------------------------------------------------------- 
        ------------------------------------------------------------------ 
       | noteLab.util.state.value.StringValue                             |
       |------------------------------------------------------------------|
       | -str:String                                                      |
       |------------------------------------------------------------------|
       | +noteLab.util.state.value.StringValue()                          |
       | +noteLab.util.state.value.StringValue(String)                    |
       |------------------------------------------------------------------|
       | +getString():String                                              |
       | +setString(String):void                                          |
       | +getValueFromString(String):noteLab.util.state.value.StringValue |
       | +getValueFromString(String):Object                               |
       | +getStringFromValue():String                                     |
        ------------------------------------------------------------------ 
        ------------------------------------------------------------------------------------------ 
       | noteLab.materials.tools.Tool                                                             |
       |------------------------------------------------------------------------------------------|
       | +drawLine(Graphics2D, noteLab.util.geom.MPoint, noteLab.util.geom.MAffineTransform):void |
       | +getToolImage():Image                                                                    |
       | +getToolHotSpot():Point                                                                  |
       | +getToolName():String                                                                    |
        ------------------------------------------------------------------------------------------ 
        ---------------------------------------------- 
       | noteLab.util.geom.unit.Unit                  |
       |----------------------------------------------|
       | +PIXEL:noteLab.util.geom.unit.Unit           |
       | +INCH:noteLab.util.geom.unit.Unit            |
       | +CM:noteLab.util.geom.unit.Unit              |
       | -ENUM$VALUES:[LnoteLab.util.geom.unit.Unit;  |
       |----------------------------------------------|
       | -noteLab.util.geom.unit.Unit(String, int)    |
       |----------------------------------------------|
       | +valueOf(String):noteLab.util.geom.unit.Unit |
       | +values():[LnoteLab.util.geom.unit.Unit;     |
        ---------------------------------------------- 
        ------------------------------------------------------------- 
       | noteLab.gui.geom.UnitComboBox                               |
       |-------------------------------------------------------------|
       | +noteLab.gui.geom.UnitComboBox()                            |
       | +noteLab.gui.geom.UnitComboBox(noteLab.util.geom.unit.Unit) |
       |-------------------------------------------------------------|
       | +setUnit(noteLab.util.geom.unit.Unit):void                  |
       | +getUnit():noteLab.util.geom.unit.Unit                      |
        ------------------------------------------------------------- 

================================================================================
Section 3:  Shortened Source Code Organized Alphabetically
================================================================================

       package noteLab.materials
       public class noteLab.materials.Binder extends Object implements Printable, noteLab.util.save.SVGExportable, noteLab.gui.Renderable 
       { 
         Attributes
         =======
           private LinkedList pageList 
           private int curPage 
           private noteLab.materials.stroke.Stroke curStroke 
           private int numColumns 
        
         Constructor
         =========
           public transient noteLab.materials.Binder( [LnoteLab.materials.Page; ) 
        
         Methods
         ======
           public static void main( [Ljava.lang.String; ) 
           public void next( ) 
           public int print( Graphics, PageFormat, int ) 
           public void previous( ) 
           public noteLab.util.geom.unit.MValue getLength( noteLab.util.geom.unit.Unit ) 
           public noteLab.util.geom.unit.MValue getWidth( noteLab.util.geom.unit.Unit ) 
           public void renderInto( Graphics2D, noteLab.util.geom.MAffineTransform ) 
           public void setNumColumns( int ) 
           public void addNewPage( ) 
           public void copyPage( ) 
           public noteLab.materials.Page getCurrentPage( ) 
           public boolean isStrokeStarted( ) 
           public void addPointToStroke( noteLab.util.geom.MPoint ) 
           public void setCurrentPage( noteLab.util.geom.MPoint ) 
           public void startStroke( noteLab.materials.tools.Tool, noteLab.util.geom.MPoint ) 
           public void finishStroke( ) 
           private void updateArrangement( ) 
           public void addPage( noteLab.materials.Page ) 
           public int getNumColumns( ) 
           public int getPageIndexAtPoint( noteLab.util.geom.MPoint ) 
           public void setCurrentPageIndex( int ) 
           public boolean isInCurrentPage( noteLab.util.geom.MPoint ) 
           public int getCurrentPageIndex( ) 
           private noteLab.util.geom.MPoint getPointRelativeToCurrentPage( noteLab.util.geom.MPoint ) 
           private noteLab.materials.Binder$LocatedPage getCurrentLocatedPage( ) 
           public noteLab.util.geom.MPoint getClippedPoint( noteLab.util.geom.MPoint ) 
           public void appendSVGCode( StringBuffer ) 
       }

       package noteLab.materials
       private class noteLab.materials.Binder$LocatedPage extends Object
       { 
         Attributes
         =======
           public noteLab.materials.Page page 
           public noteLab.util.geom.MPoint location 
           final noteLab.materials.Binder this$0 
        
         Constructors
         =========
           public noteLab.materials.Binder$LocatedPage( noteLab.materials.Binder, noteLab.materials.Page ) 
           public noteLab.materials.Binder$LocatedPage( noteLab.materials.Binder, noteLab.materials.Page, noteLab.util.geom.MPoint ) 
        
         Methods
         ======
       }

       package noteLab.gui
       public class noteLab.gui.BinderCanvas extends JPanel
       { 
         Attributes
         =======
           private noteLab.materials.Binder binder 
           private noteLab.materials.tools.Tool tool 
           private noteLab.util.geom.MAffineTransform zoomTransform 
           private AffineTransform zoomTransformInverse 
           private double zoomFactor 
        
         Constructor
         =========
           public noteLab.gui.BinderCanvas( noteLab.materials.tools.Tool ) 
        
         Methods
         ======
           public static void main( [Ljava.lang.String; ) 
           public void paint( Graphics ) 
           static noteLab.materials.Binder access$0( noteLab.gui.BinderCanvas ) 
           static AffineTransform access$1( noteLab.gui.BinderCanvas ) 
           public void setTool( noteLab.materials.tools.Tool ) 
           public void setZoomFactor( double ) 
           public noteLab.materials.tools.Tool getTool( ) 
           public double getZoomFactor( ) 
           public void zoomBy( double ) 
           public noteLab.util.geom.MAffineTransform getMTransform( ) 
           public noteLab.materials.Binder getBinder( ) 
           private void updatePreferredSize( ) 
           private AffineTransform getZoomTransformInverse( ) 
       }

       package noteLab.gui
       private class noteLab.gui.BinderCanvas$StylusMotionListener extends Object implements MouseMotionListener, MouseListener 
       { 
         Attribute
         =======
           final noteLab.gui.BinderCanvas this$0 
        
         Constructor
         =========
           public noteLab.gui.BinderCanvas$StylusMotionListener( noteLab.gui.BinderCanvas ) 
        
         Methods
         ======
           public void mouseClicked( MouseEvent ) 
           public void mouseDragged( MouseEvent ) 
           public void mouseEntered( MouseEvent ) 
           public void mouseExited( MouseEvent ) 
           public void mouseMoved( MouseEvent ) 
           public void mousePressed( MouseEvent ) 
           public void mouseReleased( MouseEvent ) 
           private void addPoint( MouseEvent ) 
           private void createStroke( MouseEvent ) 
           private noteLab.util.geom.MPoint getPixelPoint( Point ) 
       }

       package noteLab.util.state.value
       public class noteLab.util.state.value.ColorValue extends Object implements noteLab.util.state.StringRecordable 
       { 
         Attribute
         =======
           private Color color 
        
         Constructors
         =========
           public noteLab.util.state.value.ColorValue( ) 
           public noteLab.util.state.value.ColorValue( Color ) 
        
         Methods
         ======
           public void setColor( Color ) 
           public Color getColor( ) 
           public noteLab.util.state.value.ColorValue getValueFromString( String ) 
           public volatile Object getValueFromString( String ) 
           public String getStringFromValue( ) 
       }

       package noteLab.gui
       public class noteLab.gui.ColorfulButton extends JButton implements ActionListener 
       { 
         Attributes
         =======
           private Color color 
           private JDialog chooserDialog 
           private JColorChooser colorChooser 
           private boolean enabled 
        
         Constructor
         =========
           public noteLab.gui.ColorfulButton( Color ) 
        
         Methods
         ======
           public void setEnabled( boolean ) 
           protected void paintComponent( Graphics ) 
           public void setColor( Color ) 
           public void actionPerformed( ActionEvent ) 
           public Color getColor( ) 
           static JColorChooser access$0( noteLab.gui.ColorfulButton ) 
           static JDialog access$1( noteLab.gui.ColorfulButton ) 
       }

       package noteLab.gui
       private class noteLab.gui.ColorfulButton$CancelListener extends Object implements ActionListener 
       { 
         Attribute
         =======
           final noteLab.gui.ColorfulButton this$0 
        
         Constructor
         =========
           noteLab.gui.ColorfulButton$CancelListener( noteLab.gui.ColorfulButton ) 
        
         Method
         ======
           public void actionPerformed( ActionEvent ) 
       }

       package noteLab.gui
       private class noteLab.gui.ColorfulButton$OkListener extends Object implements ActionListener 
       { 
         Attribute
         =======
           final noteLab.gui.ColorfulButton this$0 
        
         Constructor
         =========
           noteLab.gui.ColorfulButton$OkListener( noteLab.gui.ColorfulButton ) 
        
         Method
         ======
           public void actionPerformed( ActionEvent ) 
       }

       package noteLab.util
       public, abstract interface noteLab.util.CopyReady
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Method
         ======
           public abstract Object getCopy( ) 
       }

       package noteLab.gui
       public, final class noteLab.gui.DefinedIcon extends Enum
       { 
         Attributes
         =======
           public static final noteLab.gui.DefinedIcon bigeraser2 
           public static final noteLab.gui.DefinedIcon bigeraser 
           public static final noteLab.gui.DefinedIcon blank 
           public static final noteLab.gui.DefinedIcon box 
           public static final noteLab.gui.DefinedIcon browser 
           public static final noteLab.gui.DefinedIcon bsp 
           public static final noteLab.gui.DefinedIcon calc 
           public static final noteLab.gui.DefinedIcon cap 
           public static final noteLab.gui.DefinedIcon clockcursor 
           public static final noteLab.gui.DefinedIcon clock 
           public static final noteLab.gui.DefinedIcon clonedoc 
           public static final noteLab.gui.DefinedIcon defaultPen 
           public static final noteLab.gui.DefinedIcon dotblk3 
           public static final noteLab.gui.DefinedIcon dotblk 
           public static final noteLab.gui.DefinedIcon editcopy 
           public static final noteLab.gui.DefinedIcon editcut 
           public static final noteLab.gui.DefinedIcon editpaste 
           public static final noteLab.gui.DefinedIcon erasebot 
           public static final noteLab.gui.DefinedIcon eraser 
           public static final noteLab.gui.DefinedIcon erasetop 
           public static final noteLab.gui.DefinedIcon fat 
           public static final noteLab.gui.DefinedIcon filesave 
           public static final noteLab.gui.DefinedIcon fine 
           public static final noteLab.gui.DefinedIcon fullscreen 
           public static final noteLab.gui.DefinedIcon handcursor 
           public static final noteLab.gui.DefinedIcon handmixed2 
           public static final noteLab.gui.DefinedIcon handmixed 
           public static final noteLab.gui.DefinedIcon hand 
           public static final noteLab.gui.DefinedIcon handstop 
           public static final noteLab.gui.DefinedIcon handyellow 
           public static final noteLab.gui.DefinedIcon heavy 
           public static final noteLab.gui.DefinedIcon highcursor 
           public static final noteLab.gui.DefinedIcon highlighterdef 
           public static final noteLab.gui.DefinedIcon highlightermag 
           public static final noteLab.gui.DefinedIcon highlighteryel 
           public static final noteLab.gui.DefinedIcon lc 
           public static final noteLab.gui.DefinedIcon leftarrow1 
           public static final noteLab.gui.DefinedIcon leftarrow2 
           public static final noteLab.gui.DefinedIcon medium 
           public static final noteLab.gui.DefinedIcon multi3 
           public static final noteLab.gui.DefinedIcon multi 
           public static final noteLab.gui.DefinedIcon newdoc 
           public static final noteLab.gui.DefinedIcon newPage 
           public static final noteLab.gui.DefinedIcon num 
           public static final noteLab.gui.DefinedIcon paintbrush 
           public static final noteLab.gui.DefinedIcon pencilblk 
           public static final noteLab.gui.DefinedIcon pencilblu 
           public static final noteLab.gui.DefinedIcon pencilred 
           public static final noteLab.gui.DefinedIcon razor 
           public static final noteLab.gui.DefinedIcon redo 
           public static final noteLab.gui.DefinedIcon rightarrow1 
           public static final noteLab.gui.DefinedIcon rightarrow2 
           public static final noteLab.gui.DefinedIcon rtn 
           public static final noteLab.gui.DefinedIcon ruler 
           public static final noteLab.gui.DefinedIcon select 
           public static final noteLab.gui.DefinedIcon selectrect 
           public static final noteLab.gui.DefinedIcon spc 
           public static final noteLab.gui.DefinedIcon sym 
           public static final noteLab.gui.DefinedIcon text 
           public static final noteLab.gui.DefinedIcon threepages 
           public static final noteLab.gui.DefinedIcon thumbs 
           public static final noteLab.gui.DefinedIcon undo 
           public static final noteLab.gui.DefinedIcon user 
           public static final noteLab.gui.DefinedIcon viewmagfit 
           public static final noteLab.gui.DefinedIcon viewmagMinus 
           public static final noteLab.gui.DefinedIcon viewmagPlus 
           public static final noteLab.gui.DefinedIcon whitecursor 
           public static final noteLab.gui.DefinedIcon whiteout 
           public static final noteLab.gui.DefinedIcon collegeRuled 
           public static final noteLab.gui.DefinedIcon wideRuled 
           public static final noteLab.gui.DefinedIcon graph 
           private String EXT 
           private static final [LnoteLab.gui.DefinedIcon; ENUM$VALUES 
        
         Constructor
         =========
           private noteLab.gui.DefinedIcon( String, int ) 
        
         Methods
         ======
           public String toString( ) 
           public static final noteLab.gui.DefinedIcon valueOf( String ) 
           public static final [LnoteLab.gui.DefinedIcon; values( ) 
       }

       package noteLab.util
       public class noteLab.util.InfoCenter extends Object
       { 
         Attributes
         =======
           private static final String NAME 
           private static final String VERSION 
           private static final String ICON_PATH_NAME 
           private static final String PREF_HOME_NAME 
           private static final File APP_HOME 
           private static final File PREF_HOME 
        
         Constructor
         =========
           private noteLab.util.InfoCenter( ) 
        
         Methods
         ======
           public static void main( [Ljava.lang.String; ) 
           private static final String mkdir( File ) 
           public static ImageIcon getImage( noteLab.gui.DefinedIcon ) 
           public static final String getAppName( ) 
           public static final File getAppHome( ) 
           public static final String getAppVersion( ) 
           public static final File getPreferencesHome( ) 
           public static final String isAppHomeValid( ) 
           private static final String isDirValid( File ) 
           public static final String buildAppHome( ) 
       }

       package noteLab.util.geom
       public class noteLab.util.geom.MAffineTransform extends AffineTransform
       { 
         Attribute
         =======
           private noteLab.util.geom.unit.Unit unit 
        
         Constructors
         =========
           public noteLab.util.geom.MAffineTransform( noteLab.util.geom.unit.Unit ) 
           public noteLab.util.geom.MAffineTransform( [D, noteLab.util.geom.unit.Unit ) 
        
         Methods
         ======
           public noteLab.util.geom.unit.MValue transform( noteLab.util.geom.unit.MValue ) 
           public noteLab.util.geom.MPoint transform( noteLab.util.geom.MPoint ) 
           public noteLab.util.geom.MDimension transform( noteLab.util.geom.MDimension ) 
           public noteLab.util.geom.MLine transform( noteLab.util.geom.MLine ) 
           public noteLab.util.geom.MRectangle transform( noteLab.util.geom.MRectangle ) 
           public void setMatrix( [D ) 
       }

       package noteLab.util.geom
       public class noteLab.util.geom.MDimension extends Object implements noteLab.util.CopyReady 
       { 
         Attributes
         =======
           private noteLab.util.geom.unit.MValue length 
           private noteLab.util.geom.unit.MValue width 
        
         Constructor
         =========
           public noteLab.util.geom.MDimension( noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
        
         Methods
         ======
           public String toString( ) 
           public void setLength( noteLab.util.geom.unit.MValue ) 
           public noteLab.util.geom.unit.MValue getLength( ) 
           public noteLab.util.geom.unit.MValue getWidth( ) 
           public noteLab.util.geom.MDimension getCopy( ) 
           public volatile Object getCopy( ) 
           public void setWidth( noteLab.util.geom.unit.MValue ) 
       }

       package noteLab.util.geom
       public class noteLab.util.geom.MLine extends Object implements noteLab.util.CopyReady 
       { 
         Attributes
         =======
           private noteLab.util.geom.MPoint point1 
           private noteLab.util.geom.MPoint point2 
        
         Constructor
         =========
           public noteLab.util.geom.MLine( noteLab.util.geom.MPoint, noteLab.util.geom.MPoint ) 
        
         Methods
         ======
           public noteLab.util.geom.MLine getCopy( ) 
           public volatile Object getCopy( ) 
           public noteLab.util.geom.MPoint getPoint1( ) 
           public noteLab.util.geom.MPoint getPoint2( ) 
           public void setPoint1( noteLab.util.geom.MPoint ) 
           public void setPoint2( noteLab.util.geom.MPoint ) 
       }

       package noteLab.util.geom
       public class noteLab.util.geom.MPoint extends Object implements noteLab.util.CopyReady 
       { 
         Attributes
         =======
           private noteLab.util.geom.unit.MValue x 
           private noteLab.util.geom.unit.MValue y 
        
         Constructor
         =========
           public noteLab.util.geom.MPoint( noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
        
         Methods
         ======
           public String toString( ) 
           public noteLab.util.geom.unit.MValue getX( ) 
           public noteLab.util.geom.unit.MValue getY( ) 
           public noteLab.util.geom.MPoint getCopy( ) 
           public volatile Object getCopy( ) 
           public static noteLab.util.geom.MPoint difference( noteLab.util.geom.unit.Unit, noteLab.util.geom.MPoint, noteLab.util.geom.MPoint ) 
           public void setX( noteLab.util.geom.unit.MValue ) 
           public void setY( noteLab.util.geom.unit.MValue ) 
           public static transient noteLab.util.geom.MPoint sum( noteLab.util.geom.unit.Unit, [LnoteLab.util.geom.MPoint; ) 
       }

       package noteLab.util.geom
       public class noteLab.util.geom.MRectangle extends Object
       { 
         Attributes
         =======
           private noteLab.util.geom.MPoint topLeftCorner 
           private noteLab.util.geom.MDimension dimension 
        
         Constructor
         =========
           public noteLab.util.geom.MRectangle( noteLab.util.geom.MPoint, noteLab.util.geom.MDimension ) 
        
         Methods
         ======
           public noteLab.util.geom.MDimension getDimension( ) 
           public noteLab.util.geom.MPoint getTopLeftCorner( ) 
           public void setTopLeftCorner( noteLab.util.geom.MPoint ) 
           public void setDimension( noteLab.util.geom.MDimension ) 
       }

       package noteLab.util.geom.unit
       public class noteLab.util.geom.unit.MValue extends Object implements noteLab.util.CopyReady 
       { 
         Attributes
         =======
           private static final int PIXEL_PER_INCH 
           private static final float CM_PER_INCH 
           private double value 
           private noteLab.util.geom.unit.Unit unit 
        
         Constructor
         =========
           public noteLab.util.geom.unit.MValue( double, noteLab.util.geom.unit.Unit ) 
        
         Methods
         ======
           public static void main( [Ljava.lang.String; ) 
           public String toString( ) 
           public double getValue( ) 
           public double getValue( noteLab.util.geom.unit.Unit ) 
           public static double getValue( double, noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.Unit ) 
           public void setValue( double ) 
           public noteLab.util.geom.unit.MValue getCopy( ) 
           public volatile Object getCopy( ) 
           public static noteLab.util.geom.unit.MValue difference( noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
           public void setUnit( noteLab.util.geom.unit.Unit ) 
           public noteLab.util.geom.unit.Unit getUnit( ) 
           public static noteLab.util.geom.unit.MValue quotient( noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
           public static transient noteLab.util.geom.unit.MValue sum( noteLab.util.geom.unit.Unit, [LnoteLab.util.geom.unit.MValue; ) 
           public static transient noteLab.util.geom.unit.MValue product( noteLab.util.geom.unit.Unit, [LnoteLab.util.geom.unit.MValue; ) 
           public static boolean isGreater( noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
           public static boolean isGreaterOrEqual( noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
           public static boolean isLess( noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
           public static boolean isLessOrEqual( noteLab.util.geom.unit.Unit, noteLab.util.geom.unit.MValue, noteLab.util.geom.unit.MValue ) 
       }

       package noteLab.gui.geom
       public class noteLab.gui.geom.MValueControl extends JPanel
       { 
         Attributes
         =======
           private JSpinner spinner 
           private noteLab.gui.geom.UnitComboBox unitCombo 
        
         Constructor
         =========
           public noteLab.gui.geom.MValueControl( String, double, double, double, double, noteLab.util.geom.unit.Unit ) 
        
         Methods
         ======
           public noteLab.util.geom.unit.MValue getValue( ) 
           public void setMValue( noteLab.util.geom.unit.MValue ) 
       }

       package noteLab.gui
       public class noteLab.gui.MainFrame extends JFrame
       { 
         Attributes
         =======
           private JPanel toolbarPanel 
           private noteLab.gui.BinderCanvas canvas 
        
         Constructors
         =========
           public noteLab.gui.MainFrame( ) 
           public noteLab.gui.MainFrame( int, int ) 
        
         Method
         ======
           public static void main( [Ljava.lang.String; ) 
       }

       package noteLab.util.state.value
       public class noteLab.util.state.value.MutableNumber extends Object
       { 
         Attribute
         =======
           private double value 
        
         Constructors
         =========
           public noteLab.util.state.value.MutableNumber( int ) 
           public noteLab.util.state.value.MutableNumber( double ) 
           public noteLab.util.state.value.MutableNumber( String ) 
        
         Methods
         ======
           public static void main( [Ljava.lang.String; ) 
           public String toString( ) 
           public void setIntValue( int ) 
           public void setDoubleValue( double ) 
           public int getIntValue( ) 
           public double getDoubleValue( ) 
       }

       package noteLab.util.state.value
       public class noteLab.util.state.value.NumberValue extends Object implements noteLab.util.state.StringRecordable 
       { 
         Attribute
         =======
           private noteLab.util.state.value.MutableNumber number 
        
         Constructors
         =========
           public noteLab.util.state.value.NumberValue( ) 
           public noteLab.util.state.value.NumberValue( noteLab.util.state.value.MutableNumber ) 
        
         Methods
         ======
           public noteLab.util.state.value.MutableNumber getNumber( ) 
           public noteLab.util.state.value.NumberValue getValueFromString( String ) 
           public volatile Object getValueFromString( String ) 
           public String getStringFromValue( ) 
           private void setNumber( noteLab.util.state.value.MutableNumber ) 
       }

       package noteLab.util.state
       public class noteLab.util.state.ObjectState extends Object
       { 
         Attributes
         =======
           private static final String CLASS_SUFFIX 
           private Hashtable table 
           private String comment 
        
         Constructors
         =========
           public noteLab.util.state.ObjectState( ) 
           public noteLab.util.state.ObjectState( String ) 
        
         Methods
         ======
           public static void main( [Ljava.lang.String; ) 
           public String toString( ) 
           public noteLab.util.state.StringRecordable getValue( String ) 
           public static noteLab.util.state.ObjectState load( File ) 
           public void save( File ) 
           public boolean containsKey( String ) 
           public String getComment( ) 
           public void setComment( String ) 
           public void putValue( String, noteLab.util.state.StringRecordable ) 
       }

       package noteLab.util.state
       public, abstract interface noteLab.util.state.ObjectStateAccessible
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Methods
         ======
           public abstract noteLab.util.state.ObjectState getDefaultObjectState( ) 
           public abstract noteLab.util.state.ObjectState getObjectState( ) 
           public abstract void setObjectState( noteLab.util.state.ObjectState ) 
       }

       package noteLab.util.state
       public class noteLab.util.state.ObjectStateUtilities extends Object
       { 
         Attributes
         =======
        
         Constructor
         =========
           private noteLab.util.state.ObjectStateUtilities( ) 
        
         Methods
         ======
       }

       package noteLab.materials
       public class noteLab.materials.Page extends Object implements noteLab.gui.Renderable, noteLab.util.save.SVGExportable, Printable, noteLab.util.CopyReady, noteLab.util.state.ObjectStateAccessible 
       { 
         Attributes
         =======
           private noteLab.util.geom.MDimension dimension 
           private LinkedList strokeList 
           private noteLab.materials.Paper paper 
        
         Constructors
         =========
           public noteLab.materials.Page( ) 
           public noteLab.materials.Page( noteLab.util.geom.MDimension ) 
           public noteLab.materials.Page( noteLab.util.geom.MDimension, noteLab.materials.Paper$PaperType ) 
        
         Methods
         ======
           public String toString( ) 
           public int print( Graphics, PageFormat, int ) 
           public void setLength( noteLab.util.geom.unit.MValue ) 
           public noteLab.util.geom.unit.MValue getLength( ) 
           public noteLab.util.geom.unit.MValue getWidth( ) 
           public noteLab.util.geom.MDimension getDimension( ) 
           public noteLab.materials.Page getCopy( ) 
           public volatile Object getCopy( ) 
           public void setWidth( noteLab.util.geom.unit.MValue ) 
           public noteLab.util.state.ObjectState getDefaultObjectState( ) 
           public noteLab.util.state.ObjectState getObjectState( ) 
           public void setObjectState( noteLab.util.state.ObjectState ) 
           public void renderInto( Graphics2D, noteLab.util.geom.MAffineTransform ) 
           public noteLab.materials.Paper getPaper( ) 
           public void addStroke( noteLab.materials.stroke.Stroke ) 
           public void appendSVGCode( StringBuffer ) 
           public void setDimension( noteLab.util.geom.MDimension ) 
           public void setPaper( noteLab.materials.Paper$PaperType ) 
       }

       package noteLab.materials
       public class noteLab.materials.PageAdapter extends JPanel implements noteLab.gui.prefs.PreferenceAdapter 
       { 
         Attributes
         =======
           private static final String SAVE_KEY 
           private noteLab.materials.Page page 
        
         Constructor
         =========
           public noteLab.materials.PageAdapter( noteLab.materials.Page ) 
        
         Methods
         ======
           public String getTitle( ) 
           public String getSaveKey( ) 
           public JPanel getOptionsPanel( ) 
       }

       package noteLab.gui.toolbar
       public class noteLab.gui.toolbar.PageToolBar extends JToolBar implements ActionListener 
       { 
         Attributes
         =======
           private static final String PLAIN_PAPER 
           private static final String GRAPH_PAPER 
           private static final String WIDE_RULED_PAPER 
           private static final String COLLEGE_RULED_PAPER 
           private static final String ZOOM_OUT 
           private static final String ZOOM_NORMAL 
           private static final String ZOOM_IN 
           private static final String CONTINUOUS 
           private static final String THUMBS 
           private static final String NEW_PAGE 
           private static final String COPY_PAGE 
           private static final double ZOOM_IN_FACTOR 
           private static final double ZOOM_OUT_FACTOR 
           private JButton plainButton 
           private JButton graphButton 
           private JButton collegeButton 
           private JButton wideButton 
           private JButton zoomInButton 
           private JButton zoomNormalButton 
           private JButton zoomOutButton 
           private JButton contButton 
           private JButton quadButton 
           private JButton newPageButton 
           private JButton copyPageButton 
           private noteLab.gui.BinderCanvas canvas 
        
         Constructor
         =========
           public noteLab.gui.toolbar.PageToolBar( noteLab.gui.BinderCanvas ) 
        
         Method
         ======
           public void actionPerformed( ActionEvent ) 
       }

       package noteLab.materials
       public class noteLab.materials.Paper extends Object implements noteLab.gui.Renderable, noteLab.util.CopyReady 
       { 
         Attributes
         =======
           private static int GRID_WIDTH 
           private static int COLLEGE_WIDTH 
           private static int WIDE_WIDTH 
           private noteLab.util.geom.MDimension dimension 
           private noteLab.materials.Paper$PaperType type 
        
         Constructor
         =========
           public noteLab.materials.Paper( noteLab.materials.Paper$PaperType, noteLab.util.geom.MDimension ) 
        
         Methods
         ======
           public void setLength( noteLab.util.geom.unit.MValue ) 
           public noteLab.util.geom.unit.MValue getLength( ) 
           public noteLab.util.geom.unit.MValue getWidth( ) 
           public noteLab.util.geom.MDimension getDimension( ) 
           public noteLab.materials.Paper getCopy( ) 
           public volatile Object getCopy( ) 
           public void setWidth( noteLab.util.geom.unit.MValue ) 
           public void renderInto( Graphics2D, noteLab.util.geom.MAffineTransform ) 
           public noteLab.materials.Paper$PaperType getPaperType( ) 
           public void setDimension( noteLab.util.geom.MDimension ) 
           public void setPaperType( noteLab.materials.Paper$PaperType ) 
           private int getPixelWidth( noteLab.util.geom.MAffineTransform ) 
           private int getPixelHeight( noteLab.util.geom.MAffineTransform ) 
           private void renderLinesAcross( Graphics2D, int, int, int, int, int, noteLab.util.geom.MAffineTransform ) 
           private void renderLinesDown( Graphics2D, int, int, int, int, int, noteLab.util.geom.MAffineTransform ) 
           private void renderLinedPage( Graphics2D, int, noteLab.util.geom.MAffineTransform ) 
           private int transformPixelLength( int, noteLab.util.geom.MAffineTransform ) 
       }

       package noteLab.materials
       public, static, final class noteLab.materials.Paper$PaperType extends Enum
       { 
         Attributes
         =======
           public static final noteLab.materials.Paper$PaperType Plain 
           public static final noteLab.materials.Paper$PaperType Graph 
           public static final noteLab.materials.Paper$PaperType CollegeRuled 
           public static final noteLab.materials.Paper$PaperType WideRuled 
           private static final [LnoteLab.materials.Paper$PaperType; ENUM$VALUES 
        
         Constructor
         =========
           private noteLab.materials.Paper$PaperType( String, int ) 
        
         Methods
         ======
           public static final noteLab.materials.Paper$PaperType valueOf( String ) 
           public static final [LnoteLab.materials.Paper$PaperType; values( ) 
       }

       package noteLab.materials.tools
       public class noteLab.materials.tools.Pen extends Object implements noteLab.materials.tools.Tool 
       { 
         Attributes
         =======
           private static final String PEN_NAME 
           private static final Point PEN_HOT_SPOT 
           private static final String WIDTH_KEY 
           private static final String COLOR_KEY 
           private static final int DEFAULT_WIDTH 
           private static final Color DEFAULT_COLOR 
           private static final noteLab.util.state.ObjectState DEFAULT_STATE 
           private int width 
           private Color color 
           private BufferedImage penImage 
        
         Constructors
         =========
           public noteLab.materials.tools.Pen( ) 
           public noteLab.materials.tools.Pen( int, Color ) 
        
         Methods
         ======
           public float getWidth( ) 
           public void setColor( Color ) 
           public Color getColor( ) 
           public void drawLine( Graphics2D, noteLab.util.geom.MPoint, noteLab.util.geom.MAffineTransform ) 
           public noteLab.materials.tools.Pen getCopy( ) 
           public volatile Object getCopy( ) 
           public void setWidth( int ) 
           public Image getToolImage( ) 
           public Point getToolHotSpot( ) 
           public String getToolName( ) 
           public noteLab.util.state.ObjectState getDefaultObjectState( ) 
           public noteLab.util.state.ObjectState getObjectState( ) 
           public void setObjectState( noteLab.util.state.ObjectState ) 
           public void renderInto( Graphics2D ) 
           private static void fillObjectState( noteLab.util.state.ObjectState, float, Color ) 
           private void drawPenImage( ) 
           private BasicStroke constructJavaStroke( ) 
       }

       package noteLab.gui.toolbar
       public class noteLab.gui.toolbar.PenToolBar extends JToolBar implements ActionListener 
       { 
         Attributes
         =======
           private static final String SELECT_PEN 
           private noteLab.gui.toolbar.PenToolBar$PenWidth penWidth 
           private noteLab.gui.toolbar.PenToolBar$PenColor penColor 
           private noteLab.materials.tools.Pen pen 
           private noteLab.gui.BinderCanvas canvas 
        
         Constructor
         =========
           public noteLab.gui.toolbar.PenToolBar( noteLab.gui.BinderCanvas ) 
        
         Methods
         ======
           public void actionPerformed( ActionEvent ) 
           public noteLab.materials.tools.Pen getPen( ) 
           private void setPen( noteLab.materials.tools.Pen ) 
           private void adjustPen( ) 
       }

       package noteLab.gui.toolbar
       private, static, final class noteLab.gui.toolbar.PenToolBar$PenColor extends Enum
       { 
         Attributes
         =======
           public static final noteLab.gui.toolbar.PenToolBar$PenColor black 
           public static final noteLab.gui.toolbar.PenToolBar$PenColor blue 
           public static final noteLab.gui.toolbar.PenToolBar$PenColor red 
           public static final noteLab.gui.toolbar.PenToolBar$PenColor white 
           private static [I $SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenColor 
           private static final [LnoteLab.gui.toolbar.PenToolBar$PenColor; ENUM$VALUES 
        
         Constructor
         =========
           noteLab.gui.toolbar.PenToolBar$PenColor( String, int ) 
        
         Methods
         ======
           public static final noteLab.gui.toolbar.PenToolBar$PenColor valueOf( String ) 
           public static final [LnoteLab.gui.toolbar.PenToolBar$PenColor; values( ) 
           public Color getColor( ) 
           static [I $SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenColor( ) 
       }

       package noteLab.gui.toolbar
       private, static, final class noteLab.gui.toolbar.PenToolBar$PenWidth extends Enum
       { 
         Attributes
         =======
           public static final noteLab.gui.toolbar.PenToolBar$PenWidth fine 
           public static final noteLab.gui.toolbar.PenToolBar$PenWidth medium 
           public static final noteLab.gui.toolbar.PenToolBar$PenWidth thick 
           private static [I $SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenWidth 
           private static final [LnoteLab.gui.toolbar.PenToolBar$PenWidth; ENUM$VALUES 
        
         Constructor
         =========
           noteLab.gui.toolbar.PenToolBar$PenWidth( String, int ) 
        
         Methods
         ======
           public static final noteLab.gui.toolbar.PenToolBar$PenWidth valueOf( String ) 
           public static final [LnoteLab.gui.toolbar.PenToolBar$PenWidth; values( ) 
           public int getWidth( ) 
           static [I $SWITCH_TABLE$noteLab$gui$toolbar$PenToolBar$PenWidth( ) 
       }

       package noteLab.gui.prefs
       public, abstract interface noteLab.gui.prefs.PreferenceAdapter
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Methods
         ======
           public abstract String getTitle( ) 
           public abstract String getSaveKey( ) 
           public abstract JPanel getOptionsPanel( ) 
       }

       package noteLab.gui.prefs
       public, abstract interface noteLab.gui.prefs.PreferenceCapable
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Method
         ======
           public abstract noteLab.gui.prefs.PreferenceAdapter getPreferenceAdapter( ) 
       }

       package noteLab.gui
       public class noteLab.gui.PreferencesFrame extends JFrame implements ActionListener 
       { 
         Attributes
         =======
           private static final String SAVE_TEXT 
           private static final String DEFAULTS_TEXT 
           private static final String REVERT_TEXT 
           private static final String CANCEL_TEXT 
           private noteLab.gui.BinderCanvas canvas 
           private JTabbedPane tabbedPane 
        
         Constructor
         =========
           public noteLab.gui.PreferencesFrame( noteLab.gui.BinderCanvas ) 
        
         Methods
         ======
           public void actionPerformed( ActionEvent ) 
           private void addTab( noteLab.gui.prefs.PreferenceCapable ) 
       }

       package noteLab.gui
       public, abstract interface noteLab.gui.Renderable
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Method
         ======
           public abstract void renderInto( Graphics2D, noteLab.util.geom.MAffineTransform ) 
       }

       package noteLab.util.save
       public, abstract interface noteLab.util.save.SVGExportable
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Method
         ======
           public abstract void appendSVGCode( StringBuffer ) 
       }

       package noteLab.util.state
       public, abstract interface noteLab.util.state.StringRecordable
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Methods
         ======
           public abstract Object getValueFromString( String ) 
           public abstract String getStringFromValue( ) 
       }

       package noteLab.materials.stroke
       public class noteLab.materials.stroke.Stroke extends Object implements Printable, noteLab.util.save.SVGExportable, noteLab.gui.Renderable, noteLab.util.CopyReady 
       { 
         Attributes
         =======
           private LinkedList lineList 
           private noteLab.materials.tools.Tool tool 
           private noteLab.util.geom.MPoint curPoint 
           private noteLab.materials.stroke.StrokeSVGGenerator svgGen 
           private noteLab.materials.stroke.StrokePrintManager printMan 
        
         Constructor
         =========
           public noteLab.materials.stroke.Stroke( noteLab.materials.tools.Tool, noteLab.util.geom.MPoint ) 
        
         Methods
         ======
           public int print( Graphics, PageFormat, int ) 
           public noteLab.materials.stroke.Stroke getCopy( ) 
           public volatile Object getCopy( ) 
           public void addPoint( noteLab.util.geom.MPoint ) 
           public void setTool( noteLab.materials.tools.Tool ) 
           public void renderInto( Graphics2D, noteLab.util.geom.MAffineTransform ) 
           public noteLab.materials.tools.Tool getTool( ) 
           public void finishStroke( ) 
           public void appendSVGCode( StringBuffer ) 
           private void setCurrentPoint( noteLab.util.geom.MPoint ) 
       }

       package noteLab.materials.stroke
       public class noteLab.materials.stroke.StrokePrintManager extends Object implements Printable 
       { 
         Attribute
         =======
           private noteLab.materials.stroke.Stroke stroke 
        
         Constructor
         =========
           public noteLab.materials.stroke.StrokePrintManager( noteLab.materials.stroke.Stroke ) 
        
         Methods
         ======
           public int print( Graphics, PageFormat, int ) 
           public noteLab.materials.stroke.Stroke getStroke( ) 
           public void setStroke( noteLab.materials.stroke.Stroke ) 
       }

       package noteLab.materials.stroke
       public class noteLab.materials.stroke.StrokeSVGGenerator extends Object implements noteLab.util.save.SVGExportable 
       { 
         Attribute
         =======
           private noteLab.materials.stroke.Stroke stroke 
        
         Constructor
         =========
           public noteLab.materials.stroke.StrokeSVGGenerator( noteLab.materials.stroke.Stroke ) 
        
         Methods
         ======
           public noteLab.materials.stroke.Stroke getStroke( ) 
           public void setStroke( noteLab.materials.stroke.Stroke ) 
           public void appendSVGCode( StringBuffer ) 
       }

       package noteLab.util.state.value
       public class noteLab.util.state.value.StringValue extends Object implements noteLab.util.state.StringRecordable 
       { 
         Attribute
         =======
           private String str 
        
         Constructors
         =========
           public noteLab.util.state.value.StringValue( ) 
           public noteLab.util.state.value.StringValue( String ) 
        
         Methods
         ======
           public String getString( ) 
           public void setString( String ) 
           public noteLab.util.state.value.StringValue getValueFromString( String ) 
           public volatile Object getValueFromString( String ) 
           public String getStringFromValue( ) 
       }

       package noteLab.materials.tools
       public, abstract interface noteLab.materials.tools.Tool implements noteLab.util.state.ObjectStateAccessible, noteLab.util.CopyReady 
       { 
         Attributes
         =======
        
         Constructors
         =========
        
         Methods
         ======
           public abstract void drawLine( Graphics2D, noteLab.util.geom.MPoint, noteLab.util.geom.MAffineTransform ) 
           public abstract Image getToolImage( ) 
           public abstract Point getToolHotSpot( ) 
           public abstract String getToolName( ) 
       }

       package noteLab.util.geom.unit
       public, final class noteLab.util.geom.unit.Unit extends Enum
       { 
         Attributes
         =======
           public static final noteLab.util.geom.unit.Unit PIXEL 
           public static final noteLab.util.geom.unit.Unit INCH 
           public static final noteLab.util.geom.unit.Unit CM 
           private static final [LnoteLab.util.geom.unit.Unit; ENUM$VALUES 
        
         Constructor
         =========
           private noteLab.util.geom.unit.Unit( String, int ) 
        
         Methods
         ======
           public static final noteLab.util.geom.unit.Unit valueOf( String ) 
           public static final [LnoteLab.util.geom.unit.Unit; values( ) 
       }

       package noteLab.gui.geom
       public class noteLab.gui.geom.UnitComboBox extends JComboBox
       { 
         Attributes
         =======
        
         Constructors
         =========
           public noteLab.gui.geom.UnitComboBox( ) 
           public noteLab.gui.geom.UnitComboBox( noteLab.util.geom.unit.Unit ) 
        
         Methods
         ======
           public void setUnit( noteLab.util.geom.unit.Unit ) 
           public noteLab.util.geom.unit.Unit getUnit( ) 
       }

================================================================================
================================================================================
